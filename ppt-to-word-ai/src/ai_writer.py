import google.generativeai as genai
import os
import re

def clean_extracted_text(text: str) -> str:
    """Limpia y normaliza texto extra√≠do - MEJORADO seg√∫n feedback"""
    # Eliminar caracteres especiales y normalizar espacios
    text = re.sub(r'\s+', ' ', text)  # M√∫ltiples espacios a uno
    text = re.sub(r'\n\s*\n', '\n\n', text)  # M√∫ltiples saltos de l√≠nea
    text = text.strip()
    
    # Eliminar fragmentos irrelevantes y muy cortos
    lines = text.split('\n')
    clean_lines = []
    
    for line in lines:
        line = line.strip()
        # Filtrar l√≠neas muy cortas o irrelevantes
        if len(line) < 15:
            continue
        # Filtrar contenido gen√©rico com√∫n de presentaciones
        if any(generic in line.lower() for generic in [
            "slide", "p√°gina", "click aqu√≠", "siguiente", "anterior", 
            "fondo", "plantilla", "dise√±o", "men√∫", "navegaci√≥n"
        ]):
            continue
        clean_lines.append(line)
    
    return '\n'.join(clean_lines)

def generate_explanation(content: str) -> str:
    """Genera explicaci√≥n mejorada con formato usando Gemini"""
    # Configurar Gemini
    api_key = os.getenv('GEMINI_API_KEY')
    if not api_key:
        raise ValueError("GEMINI_API_KEY no est√° configurada en las variables de entorno")
    
    genai.configure(api_key=api_key)
    model = genai.GenerativeModel('gemini-1.5-flash')
    
    # Limpiar contenido primero
    clean_content = clean_extracted_text(content)
    
    prompt = f"""Eres un experto en crear material did√°ctico acad√©mico de alta calidad en ESPA√ëOL.

CONTENIDO A PROCESAR:
{clean_content}

INSTRUCCIONES CR√çTICAS PARA EXCELENCIA ACAD√âMICA:

üìã ESTRUCTURA JER√ÅRQUICA OBLIGATORIA:
- ## para t√≠tulos principales tem√°ticos (NO por slide, sino por tema)
- ### para subtemas l√≥gicos  
- #### para conceptos espec√≠ficos
- Reorganiza el contenido l√≥gicamente, ignorando el orden original de slides
- Crea una narrativa acad√©mica coherente y progresiva

üö´ ELIMINAR ABSOLUTAMENTE:
- Repeticiones de conceptos b√°sicos ya explicados
- Frases gen√©ricas sin valor espec√≠fico del contenido
- Texto de relleno o artificialmente alargado
- Contenido fuera del material fuente
- Explicaciones superficiales

üíª C√ìDIGO (obligatorio si aparece):
- Explica l√≠nea por l√≠nea el funcionamiento
- Comenta el prop√≥sito en el contexto acad√©mico
- No asumas conocimientos previos no justificados
- Incluye comentarios explicativos en espa√±ol

ÔøΩ ENRIQUECIMIENTO PEDAG√ìGICO:
- Tablas comparativas para listas complejas
- Vi√±etas (‚Ä¢) para conceptos clave
- Res√∫menes al final de secciones importantes
- Ejercicios pr√°cticos relevantes al contenido
- Preguntas de reflexi√≥n para consolidar aprendizaje

‚úÖ CALIDAD ACAD√âMICA:
- M√≠nimo 200 palabras por secci√≥n principal (sin relleno)
- Profundidad real basada √∫nicamente en el material fuente
- Espa√±ol formal pero did√°ctico
- Estructura l√≥gica que facilite el aprendizaje progresivo
- Transiciones fluidas entre conceptos

üéØ OBJETIVO: Documento profesional, pedag√≥gicamente s√≥lido y realmente √∫til para el aprendizaje."""
- Progresi√≥n l√≥gica de conceptos simples a complejos
- Cada p√°rrafo debe aportar valor educativo espec√≠fico

‚ùå PROHIBIDO ESTRICTAMENTE:
- Contenido gen√©rico no relacionado con el archivo fuente
- Repeticiones de conceptos ya cubiertos
- Frases de relleno sin valor espec√≠fico
- Explicaciones superficiales de c√≥digo
- Desviarse del material original

FORMATO DE SALIDA REQUERIDO:
- Documento completamente en espa√±ol
- Estructura clara con t√≠tulos jer√°rquicos
- Contenido pedag√≥gicamente organizado
- Sin repeticiones innecesarias
- Enfoque en la comprensi√≥n profunda del material espec√≠fico

Genera un documento que sea una referencia acad√©mica √∫til, completa y pedag√≥gicamente s√≥lida basada √öNICAMENTE en el contenido proporcionado."""

    try:
        response = model.generate_content(
            prompt,
            generation_config=genai.types.GenerationConfig(
                temperature=0.3,  # M√°s conservador para contenido acad√©mico
                max_output_tokens=2048,
                top_p=0.9
            )
        )
        return response.text
    except Exception as e:
        # Fallback en caso de error
        return f"Error generando contenido con IA: {str(e)}\n\nContenido original:\n{clean_content}"